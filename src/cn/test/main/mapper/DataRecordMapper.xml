<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.test.main.mapper.DataRecordMapper">
  <resultMap id="BaseResultMap" type="cn.test.main.domain.DataRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="int_data" jdbcType="INTEGER" property="intData" />
    <result column="short_data" jdbcType="SMALLINT" property="shortData" />
    <result column="byte_data" jdbcType="TINYINT" property="byteData" />
    <result column="boolean_data" jdbcType="BIT" property="booleanData" />
    <result column="string_data" jdbcType="VARCHAR" property="stringData" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.test.main.domain.DataRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="blob_data" jdbcType="LONGVARBINARY" property="blobData" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    uuid, int_data, short_data, byte_data, boolean_data, string_data
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    blob_data
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from data_record
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from data_record
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.test.main.domain.DataRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into data_record (uuid, int_data, short_data, 
      byte_data, boolean_data, string_data, 
      blob_data)
    values (#{uuid,jdbcType=VARCHAR}, #{intData,jdbcType=INTEGER}, #{shortData,jdbcType=SMALLINT}, 
      #{byteData,jdbcType=TINYINT}, #{booleanData,jdbcType=BIT}, #{stringData,jdbcType=VARCHAR}, 
      #{blobData,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="cn.test.main.domain.DataRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into data_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="intData != null">
        int_data,
      </if>
      <if test="shortData != null">
        short_data,
      </if>
      <if test="byteData != null">
        byte_data,
      </if>
      <if test="booleanData != null">
        boolean_data,
      </if>
      <if test="stringData != null">
        string_data,
      </if>
      <if test="blobData != null">
        blob_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="intData != null">
        #{intData,jdbcType=INTEGER},
      </if>
      <if test="shortData != null">
        #{shortData,jdbcType=SMALLINT},
      </if>
      <if test="byteData != null">
        #{byteData,jdbcType=TINYINT},
      </if>
      <if test="booleanData != null">
        #{booleanData,jdbcType=BIT},
      </if>
      <if test="stringData != null">
        #{stringData,jdbcType=VARCHAR},
      </if>
      <if test="blobData != null">
        #{blobData,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.test.main.domain.DataRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update data_record
    <set>
      <if test="intData != null">
        int_data = #{intData,jdbcType=INTEGER},
      </if>
      <if test="shortData != null">
        short_data = #{shortData,jdbcType=SMALLINT},
      </if>
      <if test="byteData != null">
        byte_data = #{byteData,jdbcType=TINYINT},
      </if>
      <if test="booleanData != null">
        boolean_data = #{booleanData,jdbcType=BIT},
      </if>
      <if test="stringData != null">
        string_data = #{stringData,jdbcType=VARCHAR},
      </if>
      <if test="blobData != null">
        blob_data = #{blobData,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.test.main.domain.DataRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update data_record
    set int_data = #{intData,jdbcType=INTEGER},
      short_data = #{shortData,jdbcType=SMALLINT},
      byte_data = #{byteData,jdbcType=TINYINT},
      boolean_data = #{booleanData,jdbcType=BIT},
      string_data = #{stringData,jdbcType=VARCHAR},
      blob_data = #{blobData,jdbcType=LONGVARBINARY}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.test.main.domain.DataRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update data_record
    set int_data = #{intData,jdbcType=INTEGER},
      short_data = #{shortData,jdbcType=SMALLINT},
      byte_data = #{byteData,jdbcType=TINYINT},
      boolean_data = #{booleanData,jdbcType=BIT},
      string_data = #{stringData,jdbcType=VARCHAR}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>